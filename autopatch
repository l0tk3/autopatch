#!/bin/env python
import os
import re
import sys
def log(info):
    head="\033[1;31m"
    tail="\033[0m"
    print(head+"[*] "+info+tail)

if len(sys.argv) != 2:
    log("usage: autopatch <elf>")
    exit(0)
# find libc file in current directory
files = os.listdir(".")
libc_name = None
for i in  files:
    match_res = re.match("libc", i)
    if match_res != None:
        libc_name = i
if libc_name == None:
    log("No libc file in your directory")
    exit()
log(libc_name)

# get libc version and architecture information
try:
    libc_info = os.popen(f"strings {libc_name} | grep Ubuntu").read()
    libc_version_info = re.search("[0-9].[0-9]{2}-[0-9]ubuntu[0-9]*.[0-9]", libc_info)
    if libc_version_info == None:
        libc_version_info = re.search("[0-9].[0-9]{2}-[0-9]ubuntu[0-9]", libc_info)
    libc_version_info = libc_version_info.group()
    elf_info = os.popen(f"file {libc_name}").read()
    elf_arch_info = re.search("[0-9]{2}-bit", elf_info).group()
except:
    log("not a reguler libc file")
    exit()

# concat infomation
version="empty"
if elf_arch_info == "64-bit":
    version = libc_version_info+"_amd64"
elif elf_arch_info == "32-bit":
    version = libc_version_info+"_i386"
else :
    log("sth wrong")
    exit()
log(version)

#find path of glibc-all-in-one from env
GAIO_path = os.environ["GAIO_PATH"]
list_file = open(GAIO_path+"/list", "r")
list_file_content = list_file.read()
list_file.close()
if version not in list_file_content:
    log("No such version!")
    exit()

files = os.listdir(GAIO_path+"/libs")
os.system(f"cp {sys.argv[1]} {sys.argv[1]}bak")
if version in files:
    libc_path=GAIO_path+"/libs/"+version
    os.system(f"patchelf --set-rpath {libc_path} {sys.argv[1]}")
    os.system(f"patchelf --set-interpreter {libc_path}/ld-linux-x86-64.so.2 {sys.argv[1]}")
    exit()
else:
    res = os.popen(f"{GAIO_path}/download {version}").read()
    log(res)
    libc_path=GAIO_path+"/libs/"+version
    os.system(f"patchelf --set-rpath {libc_path} {sys.argv[1]}")
    os.system(f"patchelf --set-interpreter {libc_path}/ld-linux-x86-64.so.2 {sys.argv[1]}")
    exit()
    

